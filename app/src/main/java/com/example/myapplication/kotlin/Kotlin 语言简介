
Kotlin 在2011 年 已经开始公布了Kotlin 的第一个版本，  并在2012 年将Kotlin 开源，但是在早期时间， 并没有什么人关注。
2016年才正式开始公布了 1.0 版本, 这代表了Kotlin 已经趋于稳定了成熟了。
2017年Google 才正式开始宣布Kotlin 成为android 开发一级语言.android studio 也加入了对 Kotlin的支持.
在线学习Kotlin 代码 https://try.kotlinlang.org
Kotlin 这门语言也是面向对象的。



val 声明不可变得变量  相当于Java中的final  不可赋值
var 声明可变得变量    可赋值

变量表 Kotlin= Java
int             ==     Int
long            ==     Long
short           ==     Short
float           ==     Float
double          ==     Double
boolean         ==     Boolean
char            ==     Char
byte            ==     Byte

函数的概念 ：
    函数 function
    方法 method
    两者并没有什么区别，只是叫法不同

    函数语法规则 ：
    首先声明 fun
    程序类型声明在SimpleActivity 中

程序的逻辑控制
   程序得执行语句主要分为三种  ： 顺序语句， 条件语句，循环语句
   程序类型声明在SimpleActivity 中

循环语句
   Java 中的循环语句分为 While 和 For 循环，Kotlin 中也提供了While循环和For循环,其中While循环不管是在使用技巧上还是在语法上都和Java 中的while 循环
   没有任何区别。
   程序类型声明在SimpleActivity 中

面向对象的概念 ：
   不同面向过程的语言（比如C）面向对象语言就是可以创建类的。
   类， 就是对事物的一种封装。

类与对象
   Kotlin 中也是可以使用class 关键字来声明一个类的，这一点和Java一致.
   Kotlin 中实例化一个类的方式和Java是基本类似的,只是去掉了New 关键字而已.
   Kotlin 是本着最简化的设计原则，将诸如New , 行尾分号这种不必要的语法结构都取消掉了.
  （Person 类和Student 类）

继承与构造函数
   继承也是基于现实场景总结出来的一个概念，其实是比较好理解的。也是面向对象编程中继承的思想。
  （Student类 和 Person 类）
   注：如果一个类不是专门为继承而设计的，那么就应该主动将它加上final 声明，禁止它可以继承.
       Kotlin 很明显继承了这条编程规范，默认所有的非抽象类都是不可以被继承的.之所以这里一直在说非抽象类，是因为抽象类本身是无法创建实例的.
       一定要由自雷去继承它才能创建实例，因此抽象类必须可以继承才行，要不然就没有意义了。由于Kotlin中的抽象类和Java 中并没有区别。
       既然现在的Person 类无法被继承。我们就需要加上open 关键字可以让它被继承。   ： 符号类似于Java 中的 Extends

     这里的构造函数还包括主构造函数和次构造函数, 在  Student 和 StudentA 中都有解释.

接口
   接口是用于实现多态编程的重要组成部分。我们都知道Java 是单继承结构的语言，任何一个类最多只能继承一个父类，但是却可以实现多个接口，Kotlin也是如此.
   首先我们在Study中定义几个行为。然后由Student实现.实现接口使用的关键字是implements，而Kotlin统一使用冒号，中间用逗号分隔。Kotlin  中使用 override
   来重写父类或者实现接口中的函数。修饰符中的修饰字符关键字在Person中解释

数据类与单例类
   在Kotlin 中 如果用data关键词修饰,就相当于生成了一个数据类，如果用object关键词就相当于生成了一个单例类.
   在Cellphone中与Singleton相关例子
